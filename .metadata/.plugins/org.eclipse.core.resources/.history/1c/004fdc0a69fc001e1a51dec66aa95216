package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JOptionPane;

import connectDB.ConnectDB;
import entity.KhachHang;

public class KhachHang_DAO {

	private Connection con;
	
	//get danh sach khach hang
	public ArrayList<KhachHang> getAllKhachHang(){
		ArrayList<KhachHang> listKhachHang = new ArrayList<KhachHang>();
		try {
			ConnectDB.getInstance().connect();
			con = ConnectDB.getConnection();
			String sql = "SELECT * FROM KhachHang";
			Statement state = con.createStatement();
			ResultSet rs = state.executeQuery(sql);
			while(rs.next()) {
				String idKhachHang = rs.getString(1);
				String hoTen = rs.getString(2);
				String email = rs.getString(3);
				String sdt = rs.getString(4);
				KhachHang kh = new KhachHang(idKhachHang, hoTen, email, sdt);
				listKhachHang.add(kh);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return listKhachHang;
	}
	
	//Them
	public boolean addKhachHang(KhachHang p) throws SQLException {
		ConnectDB.getInstance();
		Connection con = ConnectDB.getConnection();
		int n = 0;
			try {
				String sql = "INSERT INTO KhachHang VALUES(?,?,?,?)";
				PreparedStatement state = con.prepareStatement(sql);
				state.setString(1, p.getMaKH());
				state.setString(2, p.getHoTen());
				state.setString(3, p.getEmail());
				state.setString(4, p.getSdt());
				n = state.executeUpdate();
			}catch(SQLException e) {
				e.printStackTrace();
				JOptionPane.showMessageDialog(null, "Mã khách hàng đã tồn tại!");
			}
			return n > 0;
	}
	
	
	//Cap 
	public boolean updateKhachHang(KhachHang p) {
		ConnectDB.getInstance();
		con = ConnectDB.getConnection();
		PreparedStatement state = null;
		int n = 0;
		try {
			String sql = "UPDATE KhachHang set "
						+ "HoTen = ?,"
						+ "Email = ?,"
						+ "Sdt = ?,"
						+ "WHERE MaKhachHang = ?";
			state = con.prepareStatement(sql);
			state.setString(1, p.getHoTen());
			state.setString(2, p.getEmail());
			state.setString(3, p.getSdt());
			state.setString(4, p.getMaKH());
			n = state.executeUpdate();
		}catch(SQLException e) {
			e.printStackTrace();
		}
		finally {
			try {
				state.close();
			}catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return n > 0;
	}
	
	//xoa
	public boolean removeKhachHang(String maKhachHang) {
		ConnectDB.getInstance();
		con = ConnectDB.getConnection();
		PreparedStatement state = null;
		int n = 0 ;
		try {
			String sql = "DELETE FROM KhachHang Where MaKhachHang = ?";
			state = con.prepareStatement(sql);
			state.setString(1, maKhachHang);
			n = state.executeUpdate();
		}catch(SQLException e) {
			e.printStackTrace();
		}
		return n > 0;
	}
}
